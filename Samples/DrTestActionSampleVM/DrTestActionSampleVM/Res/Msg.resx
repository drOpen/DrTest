<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="APPLICATION_DO_NOT_FOUND_ON_VM" xml:space="preserve">
    <value>Cannot find Application '{0}' on VM '{1}' with retryes '{2}' and timeout '{3}'.</value>
  </data>
  <data name="APPLICATION_PATH_DO_NOT_FOUND_ON_VM" xml:space="preserve">
    <value>Cannot find Application path '{0}' on VM '{1}'.</value>
  </data>
  <data name="CANNOT_CONNECT_TO_AGENT" xml:space="preserve">
    <value>Cannot connect to agent on VM '{0}'. Try to do it with retryes '{1}' and timeout '{2}'.</value>
  </data>
  <data name="CREATE_PORT_GROUP_FAILED" xml:space="preserve">
    <value>Failed to create port group '{0}' on host '{1}' on switch '{2}'. Error: '{3}'.</value>
  </data>
  <data name="CREATE_PORT_GROUP_SUCCESS" xml:space="preserve">
    <value>Successfully create port group '{0}' on host '{1}' on switch '{2}'.</value>
  </data>
  <data name="CREATE_VIRTUAL_SWITCH_FAILED" xml:space="preserve">
    <value>Failed to create switch '{0}' on host '{1}'. Error: '{2}'.</value>
  </data>
  <data name="CREATE_VIRTUAL_SWITCH_SUCCESS" xml:space="preserve">
    <value>Successfully create switch '{0}' on host '{1}'.</value>
  </data>
  <data name="HOST_DOESNT_EXIST" xml:space="preserve">
    <value>The host '{0}' could not be found.</value>
  </data>
  <data name="REMOVE_PORT_GROUP_FAILED" xml:space="preserve">
    <value>Failed to remove port group '{0}'  on host '{1}' on switch '{2}'. Error: '{3}'.</value>
  </data>
  <data name="REMOVE_PORT_GROUP_SUCCESS" xml:space="preserve">
    <value>Successfully remove switch '{0}' on host '{1}' on switch '{2}'.</value>
  </data>
  <data name="REMOVE_VIRTUAL_SWITCH_FAILED" xml:space="preserve">
    <value>Failed to remove switch '{0}' on host '{1}'. Error: '{2}'.</value>
  </data>
  <data name="REMOVE_VIRTUAL_SWITCH_SUCCESS" xml:space="preserve">
    <value>Successfully remove switch '{0}' on host '{1}'.</value>
  </data>
  <data name="SNAPSHOT_DOES_NOT_EXIST" xml:space="preserve">
    <value>Clonning VM '{0}' does not have Snapshot with name '{1}'.</value>
  </data>
  <data name="SNAPSHOT_HAVE_MORE_THEN_ONE" xml:space="preserve">
    <value>Clonning VM '{0}' have two or more Snapshots with name '{1}'.</value>
  </data>
  <data name="VM_CANNOT_CHANGE_POWER_STATUS" xml:space="preserve">
    <value>Cannot '{0}' the virtual machine '{1}'.</value>
  </data>
  <data name="VM_CHECK_PROCESS_FAILED" xml:space="preserve">
    <value>Failed Check Application '{0} on 'Virtual Machine '{1}'.  Error: '{2}'.</value>
  </data>
  <data name="VM_CHECK_PROCESS_SUCCESS" xml:space="preserve">
    <value>Successfully Check Application '{0} on 'Virtual Machine '{1}'. Its Running.</value>
  </data>
  <data name="VM_CLONE_CURRENTSNAPSHOT" xml:space="preserve">
    <value>Clonning Virtual Mashine '{0}' does not have Current Snapshot.</value>
  </data>
  <data name="VM_CLONE_INCLUDEHOST" xml:space="preserve">
    <value>Clonning VM '{0}' does not exist on Host '{1}'.</value>
  </data>
  <data name="VM_CLONE_VM_FAILED" xml:space="preserve">
    <value>Failed to Clone Virtual Machine '{0}' with new name '{1}'. Error: '{2}'.</value>
  </data>
  <data name="VM_CLONE_VM_SUCCES" xml:space="preserve">
    <value>Successfully Clone Virtual Machine '{0}' with new name '{1}'.</value>
  </data>
  <data name="VM_DOESNT_EXIST" xml:space="preserve">
    <value>The virtual machine '{0}' could not be found.</value>
  </data>
  <data name="VM_NIC_CHANGE_FAILED" xml:space="preserve">
    <value>Failed to change NicPortGroup on Virtual Machine '{0}' to  '{1}'.</value>
  </data>
  <data name="VM_NIC_CHANGE_SUCCESS" xml:space="preserve">
    <value>Successfully change NicPortGroup on Virtual Machine '{0}' to  '{1}'.</value>
  </data>
  <data name="VM_POWER_STATUS_OFF" xml:space="preserve">
    <value>power off</value>
  </data>
  <data name="VM_POWER_STATUS_ON" xml:space="preserve">
    <value>power on</value>
  </data>
  <data name="VM_POWER_STATUS_RESET" xml:space="preserve">
    <value>reset</value>
  </data>
  <data name="VM_POWER_STATUS_SUSPEND" xml:space="preserve">
    <value>suspend</value>
  </data>
  <data name="VM_POWER_UNKNOW_ACTION" xml:space="preserve">
    <value>The unknown vm power action '{0}' is forbidden.</value>
  </data>
  <data name="VM_REMOVE_VM_FAILED" xml:space="preserve">
    <value>Failed to remove Virtual Machine '{0}'. Error: '{2}'.</value>
  </data>
  <data name="VM_REMOVE_VM_SUCCESS" xml:space="preserve">
    <value>Successfully Clone Virtual Machine '{0}'.</value>
  </data>
  <data name="VM_START_PROCESS_FAILED" xml:space="preserve">
    <value>Failed Start Application with Application Path '{0} on 'Virtual Machine '{1}'.  Error: '{2}'.</value>
  </data>
  <data name="VM_START_PROCESS_SUCCES" xml:space="preserve">
    <value>Successfully Started Application with Application Path '{0} on 'Virtual Machine '{1}'.</value>
  </data>
  <data name="VM_SUCCESS_CHANGE_POWER_STATUS" xml:space="preserve">
    <value>Successfully '{0}' the virtual machine '{1}'.</value>
  </data>
</root>